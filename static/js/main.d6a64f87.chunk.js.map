{"version":3,"sources":["components/PlayerSelection/PlayerSelection.module.css","components/Board/Cell.module.css","components/PlayerSelection/PlayerInformation.module.css","components/Board/TicTacToe.module.css","components/Board/Board.module.css","components/GameOver/GameOver.module.css","components/PlayerSelection/PlayerCard.module.css","components/PlayerSelection/PlayerCard.jsx","components/PlayerSelection/PlayerInformation.jsx","components/PlayerSelection/index.jsx","components/PlayerSelection/PlayerSelection.jsx","components/Board/Cell.jsx","constants/BoardStatus.js","utils/boardChecker.js","components/Board/TicTacToe.jsx","components/Board/Board.jsx","components/Board/index.jsx","components/GameOver/index.jsx","components/GameOver/GameOver.jsx","components/Game.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","PlayerCard","value","className","onClick","classnames","styles","card","PlayerInformation","title","isPlayerOne","selectedCard","onSelectXCard","onSelectOCard","playerTwo","xSelected","secondCard","oSelected","PlayerSelection","playerOne","onSelectPlayerCard","onGameStart","playerContainer","playerInfo","bar","gameStart","gameStartButton","Cell","children","rowNum","colNum","xCell","oCell","firstRow","lastRow","firstColumn","lastColumn","BoardStatus","X_WON","O_WON","TIE","countInDirection","board","player","col","row","horizontalDisplacement","verticalDisplacement","count","isWinner","countVertical","countHorizontal","countDiagonal","countOtherDiagonal","isBoardFilled","i","j","TicTacToe","status","updateStatus","switchPlayer","isLocked","useState","setBoard","winner","style","display","tie","map","cell","newBoard","onClickCell","Board","onGameOver","setWinner","currPlayer","setCurrPlayer","currBoard","setCurrBoard","boardLayout","shouldHighlightCell","boardCell","currentPlayerX","currentPlayerO","switchPlayerCb","switchPlayerCallback","updateBoardCellStatus","GameOver","message","gameOverContainer","gameOverMessage","Game","isGameOver","setIsGameOver","setPlayerOne","setPlayerTwo","isSelectingPlayer","setIsSelectingPlayer","character","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wHACAA,EAAOC,QAAU,CAAC,gBAAkB,yCAAyC,WAAa,oCAAoC,IAAM,6BAA6B,UAAY,mCAAmC,gBAAkB,2C,gBCAlOD,EAAOC,QAAU,CAAC,MAAQ,oBAAoB,MAAQ,oBAAoB,SAAW,uBAAuB,QAAU,sBAAsB,YAAc,0BAA0B,WAAa,2B,iBCAjMD,EAAOC,QAAU,CAAC,UAAY,qCAAqC,WAAa,sCAAsC,UAAY,qCAAqC,UAAY,uC,gBCAnLD,EAAOC,QAAU,CAAC,IAAM,uBAAuB,KAAO,wBAAwB,aAAa,8BAA8B,OAAS,0BAA0B,IAAM,uBAAuB,gBAAgB,iCAAiC,gBAAgB,mC,gBCA1PD,EAAOC,QAAU,CAAC,IAAM,mBAAmB,UAAY,yBAAyB,eAAiB,8BAA8B,eAAiB,gC,mBCAhJD,EAAOC,QAAU,CAAC,kBAAoB,oCAAoC,gBAAkB,oC,iBCA5FD,EAAOC,QAAU,CAAC,KAAO,2B,sLCaVC,EAVI,SAAC,GAAD,IACjBC,EADiB,EACjBA,MACAC,EAFiB,EAEjBA,UACAC,EAHiB,EAGjBA,QAHiB,OAKjB,qBAAKD,UAAWE,IAAWC,IAAOC,KAAMJ,GAAYC,QAASA,EAA7D,SACGF,K,gBCqBUM,EA1BW,SAAC,GAAD,IACxBC,EADwB,EACxBA,MACAN,EAFwB,EAExBA,UACAO,EAHwB,EAGxBA,YACAC,EAJwB,EAIxBA,aACAC,EALwB,EAKxBA,cACAC,EANwB,EAMxBA,cANwB,OAQxB,sBAAKV,UAAWE,IAAWF,EAAD,eACvBG,IAAOQ,WAAaJ,IADvB,UAGE,8BAAMD,IACN,uBACA,cAAC,EAAD,CACEP,MAAM,IACNC,UAAWE,IAAW,eAAGC,IAAOS,UAA6B,MAAjBJ,IAC5CP,QAASQ,IAEX,cAAC,EAAD,CACEV,MAAM,IACNC,UAAWE,IAAWC,IAAOU,WAAR,eAAuBV,IAAOW,UAA6B,MAAjBN,IAC/DP,QAASS,Q,gBCxBAK,ECIS,SAAC,GAKlB,IAJLC,EAII,EAJJA,UACAL,EAGI,EAHJA,UACAM,EAEI,EAFJA,mBACAC,EACI,EADJA,YAEA,OACE,qCACE,gCACE,iEADF,mCAIA,uBACA,sBAAKlB,UAAWG,IAAOgB,gBAAvB,UACE,cAAC,EAAD,CACEb,MAAM,aACNN,UAAWG,IAAOiB,WAClBb,aAAa,EACbC,aAAcQ,EACdP,cAAe,kBAAMQ,EAAmB,MAAO,MAC/CP,cAAe,kBAAMO,EAAmB,MAAO,QAEjD,qBAAKjB,UAAWE,IAAWC,IAAOiB,WAAYjB,IAAOkB,OACrD,cAAC,EAAD,CACEf,MAAM,aACNN,UAAWG,IAAOiB,WAClBb,aAAa,EACbC,aAAcG,EACdF,cAAe,kBAAMQ,EAAmB,MAAO,MAC/CP,cAAe,kBAAMO,EAAmB,MAAO,WAInD,qBAAKjB,UAAWG,IAAOmB,UAAvB,SACE,wBAAQtB,UAAWG,IAAOoB,gBAAiBtB,QAASiB,EAApD,8B,wBCbOM,EAvBF,SAAC,GAAD,MACXxB,EADW,EACXA,UACAD,EAFW,EAEXA,MACA0B,EAHW,EAGXA,SACAC,EAJW,EAIXA,OACAC,EALW,EAKXA,OACD1B,EANY,EAMZA,QANY,OAQX,qBACED,UAAWE,IAAWF,GAAD,mBAClBG,IAAOyB,MAAkB,MAAV7B,GADG,cAElBI,IAAO0B,MAAkB,MAAV9B,GAFG,cAGlBI,IAAO2B,SAAsB,IAAXJ,GAHA,cAIlBvB,IAAO4B,QAAqB,IAAXL,GAJC,cAKlBvB,IAAO6B,YAAyB,IAAXL,GALH,cAMlBxB,IAAO8B,WAAwB,IAAXN,GANF,IAQrB1B,QAASA,EATX,SAWGF,GAAS0B,K,gBCjBCS,EANK,CAClBC,MAAO,IACPC,MAAO,IACPC,IAAK,OCHDC,EAAmB,SAACC,EAAOC,EAAQC,EAAKC,EAAKC,EAAwBC,GAEzE,IADA,IAAIC,EAAQ,EACLH,GAAO,GAAKA,EAAM,GAAKD,GAAM,GAAKA,EAAM,GACzCF,EAAMG,GAAKD,KAASD,GAGxBK,GAAS,EACTJ,GAAOE,EACPD,GAAOE,EAET,OAAOC,GAmBHC,EAAW,SAACP,EAAOG,EAAKD,GAC5B,IAAMD,EAASD,EAAMG,GAAKD,GAC1B,OAAkD,IAlB9B,SAACF,EAAOC,EAAQE,EAAKD,GACzC,OAAOH,EAAiBC,EAAOC,EAAQC,EAAKC,EAAM,EAAG,EAAG,GAAKJ,EAAiBC,EAAOC,EAAQC,EAAKC,EAAM,EAAG,GAAI,GAiBxGK,CAAcR,EAAOC,EAAQE,EAAKD,IACM,IAfzB,SAACF,EAAOC,EAAQE,EAAKD,GAC3C,OAAOH,EAAiBC,EAAOC,EAAQC,EAAM,EAAGC,EAAK,EAAG,GAAKJ,EAAiBC,EAAOC,EAAQC,EAAM,EAAGC,GAAM,EAAG,GAc7GM,CAAgBT,EAAOC,EAAQE,EAAKD,IACO,IAZzB,SAACF,EAAOC,EAAQE,EAAKD,GACzC,OAAOH,EAAiBC,EAAOC,EAAQC,EAAM,EAAGC,EAAM,EAAG,EAAG,GAAKJ,EAAiBC,EAAOC,EAAQC,EAAM,EAAGC,EAAM,GAAI,GAAI,GAWtHO,CAAcV,EAAOC,EAAQE,EAAKD,IACc,IATzB,SAACF,EAAOC,EAAQE,EAAKD,GAC9C,OAAOH,EAAiBC,EAAOC,EAAQC,EAAM,EAAGC,EAAM,EAAG,GAAI,GAAKJ,EAAiBC,EAAOC,EAAQC,EAAM,EAAGC,EAAM,GAAI,EAAG,GAQtHQ,CAAmBX,EAAOC,EAAQE,EAAKD,IAGrCU,EAAgB,SAACZ,EAAOG,EAAKD,GACjC,IAAK,IAAIW,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAID,IAAMV,GAAOW,IAAMZ,IAGH,OAAhBF,EAAMa,GAAGC,GACX,OAAO,EAIb,OAAO,GCcMC,EAvDG,SAAC,GAMZ,IALLd,EAKI,EALJA,OACAe,EAII,EAJJA,OACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,aACAC,EACI,EADJA,SAEA,EAA0BC,mBAAS,CAAC,CAAC,KAAM,KAAM,MAAO,CAAC,KAAM,KAAM,MAAO,CAAC,KAAM,KAAM,QAAzF,mBAAOpB,EAAP,KAAcqB,EAAd,KAqBA,OACE,qCACCL,GAAUA,IAAWrB,EAAYG,KAChC,qBAAKrC,UAAWG,IAAO0D,OAAvB,SACGN,IAGL,qBAAKO,MAAO,CAACC,QAAS,gBAAiB/D,UAAWE,IAAW,eAC1DC,IAAO6D,IAAMT,IAAWrB,EAAYG,MADvC,SAGGE,EAAM0B,KAAI,SAACvB,EAAKhB,GAAN,OACT,qBAAK1B,UAAWG,IAAOuC,IAAvB,SACGA,EAAIuB,KAAI,SAACC,EAAMvC,GAAP,OACP,cAAC,EAAD,CACE3B,UAAWG,IAAO+D,KAElBnE,MAAOmE,EACPxC,OAAQA,EACRC,OAAQA,EACR1B,QAAS,kBAtCD,SAACyC,EAAKD,GACxB,IAAKiB,IAAanB,EAAMG,GAAKD,GAAM,CACjC,IAAM0B,EAAW5B,EAAM0B,KAAI,SAAAvB,GAAG,mBAAQA,MACtCyB,EAASzB,GAAKD,GAAOD,EACrBoB,EAASO,GACLrB,EAASqB,EAAUzB,EAAKD,GAExBe,EADS,MAAXhB,EACeN,EAAYC,MACZD,EAAYE,OADO,SAACG,GAAD,OAAWkB,EAAaf,EAAKD,EAAKF,MAG7DY,EAAcgB,EAAUzB,EAAKD,GACpCe,EAAatB,EAAYG,KAAK,SAACE,GAAD,OAAWkB,EAAaf,EAAKD,EAAKF,MAGhEkB,EAAaf,EAAKD,IAwBG2B,CAAY1C,EAAQC,KANrC,eAEwB,EAATD,EAAaC,QAJhC,cAAiD,EAATD,a,iBC4CjC2C,EAlFD,SAAC,GAKR,IAJLrD,EAII,EAJJA,UACAL,EAGI,EAHJA,UACA2D,EAEI,EAFJA,WACAC,EACI,EADJA,UAEA,EAA0BZ,mBAAS,CAAC,CAAC,KAAM,KAAM,MAAO,CAAC,KAAM,KAAM,MAAO,CAAC,KAAM,KAAM,QAAzF,mBAAOpB,EAAP,KAAcqB,EAAd,KACA,EAAoCD,mBAAS3C,GAA7C,mBAAOwD,EAAP,KAAmBC,EAAnB,KACA,EAAkCd,mBAAS,MAA3C,mBAAOe,EAAP,KAAkBC,EAAlB,KAkBMlB,EAAe,SAACf,EAAKD,GAA8B,IAAzBmC,EAAwB,uDAAVrC,EACjBkC,EAA3BD,IAAexD,EAA0BL,EAA2BK,GAEtC,OAA1B4D,EAAYlC,GAAKD,GACnBkC,EAAa,CAACjC,EAAKD,IAGnBkC,EAAa,OAIXjB,EAAW,SAAChB,EAAKD,GACrB,OAAkB,OAAdiC,IAGAA,EAAU,KAAOhC,GAAOgC,EAAU,KAAOjC,IAMzCoC,EAAsB,SAACnC,EAAKD,GAChC,OAAQiB,EAAShB,EAAKD,IAA4B,OAApBF,EAAMG,GAAKD,IAG3C,OACE,qBAAKzC,UAAU,iBAAf,SACCuC,EAAM0B,KAAI,SAACvB,EAAKhB,GAAN,OACT,qBAA+B1B,UAAWG,IAAOuC,IAAjD,SACGA,EAAIuB,KAAI,SAACC,EAAMvC,GAAP,aACP,cAAC,EAAD,CACE3B,UAAWE,IAAWC,IAAO2E,WAAR,mBAClB3E,IAAO4E,eAAiBF,EAAoBnD,EAAQC,IAA0B,MAAf6C,GAD7C,cAElBrE,IAAO6E,eAAiBH,EAAoBnD,EAAQC,IAA0B,MAAf6C,GAF7C,IAKrB9C,OAAQA,EACRC,OAAQA,EACRF,SACE,cAAC,EAAD,CACEe,OAAQgC,EACRjB,OAAQW,EACRV,aAAc,SAACD,EAAQ0B,GAAT,OA1DE,SAACvC,EAAKD,EAAKc,EAAQ2B,GAC/C,IAAMf,EAAW5B,EAAM0B,KAAI,SAAAvB,GAAG,mBAAQA,MACtCyB,EAASzB,GAAKD,GAAOc,EACrBK,EAASO,GACLZ,IAAWrB,EAAYG,MACrBS,EAASqB,EAAUzB,EAAKD,IAC1B8B,EAAUC,GAER1B,EAASqB,EAAUzB,EAAKD,IAAQU,EAAcgB,EAAUzB,EAAKD,IAC/D6B,IAIJY,EAAqBf,GA6CiCgB,CAAsBzD,EAAQC,EAAQ4B,EAAQ0B,IACxFxB,aAAcA,EACdC,SAAUA,EAAShC,EAAQC,IAL7B,UAMmB,EAATD,EAAaC,KAf3B,eAKwB,EAATD,EAAaC,QAPhC,cAA0B,EAATD,UC5DR2C,I,iBCAAe,ECCE,SAAC,GAEX,IADLvB,EACI,EADJA,OAEMwB,EAAUxB,EAAM,2BAAuBA,EAAvB,SAAuC,cAE7D,OACE,qBAAK7D,UAAWG,IAAOmF,kBAAvB,SACE,sBAAKtF,UAAWG,IAAOoF,gBAAvB,sBAEE,uBACCF,QC+BMG,EAvCF,WACX,MAAoC7B,oBAAS,GAA7C,mBAAO8B,EAAP,KAAmBC,EAAnB,KACA,EAAkC/B,mBAAS,MAA3C,mBAAO3C,EAAP,KAAkB2E,EAAlB,KACA,EAAkChC,mBAAS,MAA3C,mBAAOhD,EAAP,KAAkBiF,EAAlB,KACA,EAAkDjC,oBAAS,GAA3D,mBAAOkC,EAAP,KAA0BC,EAA1B,KACA,EAA4BnC,mBAAS,MAArC,mBAAOE,EAAP,KAAeU,EAAf,KAmBA,OACE,qCACCsB,GAAqB,cAAC,EAAD,CACpB7E,UAAWA,EACXL,UAAWA,EACXM,mBAtBmB,SAACuB,EAAQuD,GACf,QAAXvD,GACFmD,EAAaI,GACbH,EAA2B,MAAdG,EAAoB,IAAM,OAGvCH,EAAaG,GACbJ,EAA2B,MAAdI,EAAoB,IAAM,OAgBvC7E,YAZgB,WACdF,GAAaL,GACfmF,GAAqB,OAYrBD,GAAqB,cAAC,EAAD,CAAO7E,UAAWA,EAAWL,UAAWA,EAAW4D,UAAWA,EAAWD,WAAY,kBAAMoB,GAAc,MAE/HD,GAAc,cAAC,EAAD,CAAU5B,OAAQA,QC1BtBmC,MAVf,WACE,OACE,qBAAKhG,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,SCKOiG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d6a64f87.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"playerContainer\":\"PlayerSelection_playerContainer__3OFF8\",\"playerInfo\":\"PlayerSelection_playerInfo__1CBu5\",\"bar\":\"PlayerSelection_bar__EW6p1\",\"gameStart\":\"PlayerSelection_gameStart__2jbFV\",\"gameStartButton\":\"PlayerSelection_gameStartButton__16YcV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"xCell\":\"Cell_xCell__1Il-G\",\"oCell\":\"Cell_oCell__1N_Tm\",\"firstRow\":\"Cell_firstRow__1PLYQ\",\"lastRow\":\"Cell_lastRow__2sqnB\",\"firstColumn\":\"Cell_firstColumn__1aW0I\",\"lastColumn\":\"Cell_lastColumn__3f0DI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playerTwo\":\"PlayerInformation_playerTwo__2udBT\",\"secondCard\":\"PlayerInformation_secondCard__1NWLO\",\"xSelected\":\"PlayerInformation_xSelected__3D-pz\",\"oSelected\":\"PlayerInformation_oSelected__1wJoF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"TicTacToe_row__2fTU1\",\"cell\":\"TicTacToe_cell__2QgZq\",\"board-cell\":\"TicTacToe_board-cell__2dlPN\",\"winner\":\"TicTacToe_winner__2Usjn\",\"tie\":\"TicTacToe_tie__3Q8gi\",\"highlighted-X\":\"TicTacToe_highlighted-X__cqATQ\",\"highlighted-O\":\"TicTacToe_highlighted-O__2LKG0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Board_row__1KseF\",\"boardCell\":\"Board_boardCell__2EMxC\",\"currentPlayerX\":\"Board_currentPlayerX__2jXOv\",\"currentPlayerO\":\"Board_currentPlayerO__2_1GI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameOverContainer\":\"GameOver_gameOverContainer__1lZeb\",\"gameOverMessage\":\"GameOver_gameOverMessage__3xhwX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"PlayerCard_card__rDVbu\"};","import React from 'react';\nimport classnames from 'classnames';\nimport styles from './PlayerCard.module.css';\n\nconst PlayerCard = ({\n  value,\n  className,\n  onClick\n}) => (\n  <div className={classnames(styles.card, className)} onClick={onClick}>\n    {value}\n  </div>\n);\n\nexport default PlayerCard;","import React from 'react';\nimport classnames from 'classnames';\nimport PlayerCard from './PlayerCard';\nimport styles from './PlayerInformation.module.css';\n\nconst PlayerInformation = ({\n  title,\n  className,\n  isPlayerOne,\n  selectedCard,\n  onSelectXCard,\n  onSelectOCard\n}) => (\n  <div className={classnames(className, {\n    [styles.playerTwo]: !isPlayerOne\n  })}>\n    <div>{title}</div>\n    <br />\n    <PlayerCard \n      value=\"X\"\n      className={classnames({ [styles.xSelected]: selectedCard === 'X' })}\n      onClick={onSelectXCard}\n    />\n    <PlayerCard \n      value=\"O\"\n      className={classnames(styles.secondCard, { [styles.oSelected]: selectedCard === 'O' })}\n      onClick={onSelectOCard}\n    />\n  </div>\n)\n\nexport default PlayerInformation;","import PlayerSelection from \"./PlayerSelection\";\n\nexport default PlayerSelection;","import React from 'react';\nimport classnames from 'classnames';\nimport PlayerInformation from './PlayerInformation';\n// import './PlayerSelection.css';\nimport styles from './PlayerSelection.module.css';\n\nconst PlayerSelection = ({\n  playerOne,\n  playerTwo,\n  onSelectPlayerCard,\n  onGameStart\n}) => {\n  return (\n    <>\n      <div>\n        <h2>Welcome to Ultimate Tic-Tac-Toe</h2>\n        Please select your character.\n      </div>\n      <br />\n      <div className={styles.playerContainer}> \n        <PlayerInformation\n          title=\"Player One\"\n          className={styles.playerInfo}\n          isPlayerOne={true}\n          selectedCard={playerOne}\n          onSelectXCard={() => onSelectPlayerCard('one', 'X')}\n          onSelectOCard={() => onSelectPlayerCard('one', 'O')}\n        />\n        <div className={classnames(styles.playerInfo, styles.bar)}></div>\n        <PlayerInformation\n          title=\"Player Two\"\n          className={styles.playerInfo}\n          isPlayerOne={false}\n          selectedCard={playerTwo}\n          onSelectXCard={() => onSelectPlayerCard('two', 'X')}\n          onSelectOCard={() => onSelectPlayerCard('two', 'O')}\n        />\n      </div>\n\n      <div className={styles.gameStart}>\n        <button className={styles.gameStartButton} onClick={onGameStart}>Start Game</button>\n      </div>\n    </>\n  )\n}\n\nexport default PlayerSelection;","import React from 'react';\nimport classnames from 'classnames';\nimport styles from './Cell.module.css';\n\nconst Cell = ({\n  className,\n  value,\n  children,\n  rowNum,\n  colNum,\n\tonClick\n}) => (\n  <div \n    className={classnames(className, {\n      [styles.xCell]: value === 'X',\n      [styles.oCell]: value === 'O',\n      [styles.firstRow]: rowNum === 0,\n      [styles.lastRow]: rowNum === 2,\n      [styles.firstColumn]: colNum === 0,\n      [styles.lastColumn]: colNum === 2\n    })}\n    onClick={onClick}\n  >\n    {value || children}\n  </div>\n);\n\nexport default Cell;","const BoardStatus = {\n  X_WON: 'X',\n  O_WON: 'O',\n  TIE: 'TIE'\n}\n\nexport default BoardStatus;","const countInDirection = (board, player, col, row, horizontalDisplacement, verticalDisplacement) => {\n  let count = 0;\n  while (row >= 0 && row < 3 && col >=0 && col < 3) {\n    if (board[row][col] !== player) {\n      break;\n    }\n    count += 1;\n    col += horizontalDisplacement;\n    row += verticalDisplacement;\n  }\n  return count;\n}\n\nconst countVertical = (board, player, row, col) => {\n  return countInDirection(board, player, col, row + 1, 0, 1) + countInDirection(board, player, col, row - 1, 0, -1);\n}\n\nconst countHorizontal = (board, player, row, col) => {\n  return countInDirection(board, player, col + 1, row, 1, 0) + countInDirection(board, player, col - 1, row, -1, 0);\n}\n\nconst countDiagonal = (board, player, row, col) => {\n  return countInDirection(board, player, col + 1, row + 1, 1, 1) + countInDirection(board, player, col - 1, row - 1, -1, -1);\n}\n\nconst countOtherDiagonal = (board, player, row, col) => {\n  return countInDirection(board, player, col + 1, row - 1, 1, -1) + countInDirection(board, player, col - 1, row + 1, -1, 1);\n}\n\nconst isWinner = (board, row, col) => {\n  const player = board[row][col];\n  return countVertical(board, player, row, col) === 2 || \n    countHorizontal(board, player, row, col) === 2 || \n    countDiagonal(board, player, row, col) === 2 || \n    countOtherDiagonal(board, player, row, col) === 2;\n}\n\nconst isBoardFilled = (board, row, col) => {\n  for (let i = 0; i < 3; i++) {\n    for (let j = 0; j < 3; j++) {\n      if (i === row && j === col) {\n        continue;\n      }\n      if (board[i][j] === null) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nexport {\n  isWinner,\n  isBoardFilled,\n}","import React, { useState } from 'react';\nimport classnames from 'classnames';\nimport styles from './TicTacToe.module.css';\nimport Cell from './Cell';\nimport BoardStatus from '../../constants/BoardStatus';\nimport { isWinner, isBoardFilled } from '../../utils/boardChecker';\n\nconst TicTacToe = ({\n  player,\n  status,\n  updateStatus, \n  switchPlayer,\n  isLocked, \n}) => {\n  const [board, setBoard] = useState([[null, null, null], [null, null, null], [null, null, null]]);\n\n  const onClickCell = (row, col) => {\n    if (!isLocked && !board[row][col]) {\n      const newBoard = board.map(row => [...row]);;\n      newBoard[row][col] = player;\n      setBoard(newBoard);\n      if (isWinner(newBoard, row, col)) {\n        player === 'X' ? \n          updateStatus(BoardStatus.X_WON, (board) => switchPlayer(row, col, board)) : \n          updateStatus(BoardStatus.O_WON, (board) => switchPlayer(row, col, board));\n      }\n      else if (isBoardFilled(newBoard, row, col)) {\n        updateStatus(BoardStatus.TIE, (board) => switchPlayer(row, col, board));\n      } \n      else {\n        switchPlayer(row, col);\n      }\n    }\n  }\n\n  return (\n    <>\n    {status && status !== BoardStatus.TIE && (\n      <div className={styles.winner}>\n        {status}\n      </div>\n    )}\n    <div style={{display: 'inline-block'}} className={classnames({\n      [styles.tie]: status === BoardStatus.TIE \n    })}>\n      {board.map((row, rowNum) => (\n        <div className={styles.row} key={`row-${rowNum * 3}`}>\n          {row.map((cell, colNum) => (\n            <Cell \n              className={styles.cell}\n              key={`cell-${rowNum * 3 + colNum}`}\n              value={cell}\n              rowNum={rowNum}\n              colNum={colNum}\n              onClick={() => onClickCell(rowNum, colNum)} />\n          ))}\n        </div>\n      ))}\n    </div>\n    </>\n  )\n}\nexport default TicTacToe;","import React, { useState } from 'react';\nimport classnames from 'classnames';\nimport Cell from './Cell';\nimport TicTacToe from './TicTacToe';\nimport { isWinner, isBoardFilled } from '../../utils/boardChecker';\nimport BoardStatus from '../../constants/BoardStatus';\nimport styles from './Board.module.css';\n\nconst Board = ({\n  playerOne, \n  playerTwo,\n  onGameOver,\n  setWinner\n}) => {\n  const [board, setBoard] = useState([[null, null, null], [null, null, null], [null, null, null]]);\n  const [currPlayer, setCurrPlayer] = useState(playerOne);\n  const [currBoard, setCurrBoard] = useState(null);\n\n  const updateBoardCellStatus = (row, col, status, switchPlayerCallback) => {\n    const newBoard = board.map(row => [...row]);\n    newBoard[row][col] = status;\n    setBoard(newBoard);\n    if (status !== BoardStatus.TIE) {\n      if (isWinner(newBoard, row, col)){\n        setWinner(currPlayer);\n      }\n      if (isWinner(newBoard, row, col) || isBoardFilled(newBoard, row, col)) {\n        onGameOver();\n        return;\n      }\n    }\n    switchPlayerCallback(newBoard);\n  }\n\n  const switchPlayer = (row, col, boardLayout = board) => {\n    currPlayer === playerOne ? setCurrPlayer(playerTwo) : setCurrPlayer(playerOne);\n\n    if (boardLayout[row][col] === null) {\n      setCurrBoard([row, col]);\n    }\n    else {\n      setCurrBoard(null);\n    }\n  }\n\n  const isLocked = (row, col) => {\n    if (currBoard === null) {\n      return false;\n    }\n    if (currBoard[0] === row && currBoard[1] === col) {\n      return false;\n    }\n    return true;\n  }\n\n  const shouldHighlightCell = (row, col) => {\n    return !isLocked(row, col) && board[row][col] === null;\n  }\n\n  return (\n    <div className=\"ultimate-board\">\n    {board.map((row, rowNum) => (\n      <div key={`row-${rowNum * 3}`} className={styles.row}>\n        {row.map((cell, colNum) => (\n          <Cell\n            className={classnames(styles.boardCell, {\n              [styles.currentPlayerX]: shouldHighlightCell(rowNum, colNum) && currPlayer === 'X',\n              [styles.currentPlayerO]: shouldHighlightCell(rowNum, colNum) && currPlayer === 'O',\n            })}\n            key={`cell-${rowNum * 3 + colNum}`}\n            rowNum={rowNum}\n            colNum={colNum}\n            children={(\n              <TicTacToe \n                player={currPlayer} \n                status={cell}\n                updateStatus={(status, switchPlayerCb) => updateBoardCellStatus(rowNum, colNum, status, switchPlayerCb)}\n                switchPlayer={switchPlayer}\n                isLocked={isLocked(rowNum, colNum)}\n                key={`${rowNum * 3 + colNum}`}\n              />\n            )}\n          />\n        ))}\n      </div>\n    ))}\n    </div>\n  )\n}\n\nexport default Board;","import Board from \"./Board\";\n\nexport default Board;","import GameOver from './GameOver';\n\nexport default GameOver;","import React from 'react';\nimport styles from './GameOver.module.css';\n\nconst GameOver = ({\n  winner\n}) => {\n  const message = winner ? `Congratulations, ${winner} won!` : 'It\\'s a tie!';\n\n  return (\n    <div className={styles.gameOverContainer}>\n      <div className={styles.gameOverMessage}>\n        Game Over\n        <br />\n        {message}\n      </div>\n    </div>\n  );\n}\n\nexport default GameOver;","import React, { useState } from 'react';\nimport PlayerSelection from './PlayerSelection';\nimport Board from './Board';\nimport GameOver from './GameOver';\n\nconst Game = () => {\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [playerOne, setPlayerOne] = useState(null);\n  const [playerTwo, setPlayerTwo] = useState(null);\n  const [isSelectingPlayer, setIsSelectingPlayer] = useState(true);\n  const [winner, setWinner] = useState(null);\n\n  const onSelectPlayer = (player, character) => {\n    if (player === 'one') {\n      setPlayerOne(character);\n      setPlayerTwo(character === 'O' ? 'X' : 'O');\n    }\n    else {\n      setPlayerTwo(character);\n      setPlayerOne(character === 'O' ? 'X' : 'O');\n    }\n  }\n\n  const onGameStart = () => {\n    if (playerOne && playerTwo) {\n      setIsSelectingPlayer(false);\n    }\n  }\n\n  return (\n    <>\n    {isSelectingPlayer && <PlayerSelection\n      playerOne={playerOne}\n      playerTwo={playerTwo}\n      onSelectPlayerCard={onSelectPlayer}\n      onGameStart={onGameStart}\n    />}\n    {!isSelectingPlayer && <Board playerOne={playerOne} playerTwo={playerTwo} setWinner={setWinner} onGameOver={() => setIsGameOver(true)} />}\n\n    {isGameOver && <GameOver winner={winner} />}\n    </>\n  )\n}\n\nexport default Game;","import './App.css';\nimport Game from './components/Game';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Game />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}